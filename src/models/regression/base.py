from abc import ABC
from src.models.algorithm import Algorithm
import numpy as np


class BaseRegression(Algorithm, ABC):
    """
    A base class for all regression models, inheriting from the Algorithm class.
    This class provides a structure for regression models with features, target values,
    and common methods like fit, predict, and evaluate.

    Attributes:
        X (np.ndarray): The input features for the regression model.
        y (np.ndarray): The target variable for the regression model.
    """

    def __init__(self, name: str, X: np.ndarray, y: np.ndarray, params: dict = None):
        """
        Initialize the BaseRegression with a name, input features, target values,
        and optional parameters.

        Args:
            name (str): The name of the regression model.
            X (np.ndarray): The input features for the regression.
            y (np.ndarray): The target variable for the regression.
            params (dict, optional): A dict of parameters for the regression model.
            Defaults to None, which initializes an empty dictionary.
        """
        super().__init__(name, params)
        self.X: np.ndarray = X
        self.y: np.ndarray = y

    def fit(self) -> None:
        """
        Train the regression model using the input features (X) and target values (y).

        This method should be implemented by subclasses.
        """
        pass

    def predict(self, X: np.ndarray) -> np.ndarray:
        """
        Make predictions using the regression model on the given input features.

        Args:
            X (np.ndarray): The input features for making predictions.

        Returns:
            np.ndarray: Predicted values for the given input features.

        This method should be implemented by subclasses.
        """
        pass

    def evaluate(self, y_true: np.ndarray, y_pred: np.ndarray) -> float:
        """
        Evaluate the perf of the regression model by comparing true and predict values.

        Args:
            y_true (np.ndarray): The true target values.
            y_pred (np.ndarray): The predicted values generated by the model.

        Returns:
            float: A performance metric evaluating the model's accuracy
            (to be implemented in subclasses).
        """
        pass
